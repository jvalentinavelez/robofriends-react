{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfiled","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.fdba6f5e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name,email,id }) => {\n    //const {name,email,id} = props;\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma4 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    // if (true){\n    //     throw new Error('Noooo');\n    // }\n    return (\n        <div>\n            {\n                robots.map((user,i)=>{\n                    return  (<Card \n                        key={robots[i].id} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email}/>\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfiled,searchChange}) => {\n    return (\n        <div className='pa2'>\n        <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type='search' \n        placeholder='Search robots'\n        onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\n//Scroll has 'Cardlist' as children \n//Every props has children\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY:'scroll',border:'5px solid black', height:'800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }    \n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError:true})\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Oops. that is not good </h1>\n        }\n        return this.props.children \n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\n//import {robots} from '../robots';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\n\n//App Component has 2 states, robots and searchfield.\n//Any component that has 'state' uses the class syntax, so they use the \n//constructor function to create 'this.state', and this.state is what changes in an app\n\n//Smart components have the syntax of class App and this.state\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            robots: [],\n            searchfield: ''\n        }\n        //console.log('constructor') //runs first\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users') \n            .then(response=> response.json())\n            .then(users => this.setState({robots:users}));\n        //console.log('componenteDidMount') //runs third\n    }\n\n    //Updates the state of the searchfield\n    onSearchChange = (event)=> {\n        this.setState({searchfield: event.target.value})\n    }\n\n    //React uses this.state to render and pass it down as props\n    render(){\n        const {robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ?\n        <h1>Loading</h1>:\n        (\n            //console.log('render') //runs second and fourth, because we update the state\n                <div className='tc'>\n                    <h1 className='f2'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n        )\n    }\n}\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}